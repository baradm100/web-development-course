@using web_development_course.Models.OrderModels
@using web_development_course.Models.ProductModels
@inject web_development_course.Models.OrderModels.CartService CartService
@inject web_development_course.Models.CurrencyService CurrencyService

@{
    var user = Context.User.Identity.Name;
    var authanticated = Context.User.Identity.IsAuthenticated;

    List<OrderItem> OrderItems = new List<OrderItem>();
    int LastOrderId = -1;
    if (authanticated)
    {
        OrderItems = await CartService.GetOrderItemsByUserName(user);
        if (OrderItems.Count > 0)
        {
            LastOrderId = OrderItems.Last().Id;
        }
    }

    float currency = CurrencyService.GetCurrentCurrencyValue();
    string currencySign = CurrencyService.GetCurrencySign();
}

<script type="text/javascript">
    var currency = @Json.Serialize(currency);
    var currencySign = @Json.Serialize(currencySign);
</script>

<form id="quickCartForm" asp-action="DeleteOrderItem" asp-controller="Orders"></form>

<li class="nav-item dropdown mini-cart">
    <button type="button" class="navBarDropDownCart nav-link text-white dropdown-toggle btn position-relative cartIcon mini-cart"
            id="navbarDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
        <i class="bi bi-cart-fill"></i>
        Cart
        <span class="position-absolute mt-1 start-95 translate-middle badge rounded-pill bg-danger" id="quickCartTotal">
            @OrderItems.Count
            <span class="visually-hidden">items</span>
        </span>
    </button>
    <ul class="dropdown-menu container cartQuickView quickCartDropdown" id="quickCartDropdown" aria-labelledby="quickCartDropdown">
        <div class="d-none justify-content-center" id="quickCartLoading">
            <div class="spinner-border" role="status">
                <span class="visually-hidden">Loading...</span>
            </div>
        </div>
        <div class="itemList" id="quickCartItemsList">
            @if (OrderItems.Count == 0)
            {
                <span>Your cart is empty</span>
            }

            @foreach (OrderItem orderItem in OrderItems)
            {
                String carouselId = "carouselQuickCartIndicators-" + orderItem.Id;
                String seperatorExtraClass = orderItem.Id == LastOrderId ? "d-none" : "";
                var priceBeforeDiscount = String.Format("{0:0.00}", currency * orderItem.ProductType.Product.Price * orderItem.Amount);
                var priceAfterDiscount = String.Format("{0:0.00}", currency * orderItem.ProductType.Product.Price * ((100 - orderItem.ProductType.Product.DiscountPercentage) / 100));

            <li class="row cartItem">
                <div id="@carouselId" class="carousel slide col" data-bs-ride="carousel">
                    <div class="carousel-indicators">
                        @{
                            for (var i = 0; i < orderItem.ProductType.Product.ProductImages.Count(); i++)
                            {
                                String extraClass = i == 0 ? "active" : "";

                                <button type="button" data-bs-target="#@carouselId" data-bs-slide-to="@i"
                                        class="@extraClass" aria-current="true" aria-label="Photo @i"></button>

                            }
                        }
                    </div>
                    <div class="carousel-inner">
                        @{
                            bool isFirst = true;
                            @foreach (ProductImage image in orderItem.ProductType.Product.ProductImages)
                            {
                                String base64 = Convert.ToBase64String(image.ImageData);
                                String extraClass = isFirst ? "active" : "";
                                isFirst = false;

                                <div class="carousel-item @extraClass">
                                    <img src="data:image/png;base64,@base64" class="d-block w-100 h-100" width="100"
                                         height="250" />
                                </div>
                            }
                        }
                    </div>
                    <button class="carousel-control-prev" type="button" data-bs-target="#@carouselId"
                            data-bs-slide="prev" onclick="event.stopPropagation();">
                        <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                        <span class="visually-hidden">Previous</span>
                    </button>
                    <button class="carousel-control-next" type="button" data-bs-target="#@carouselId"
                            data-bs-slide="next" onclick="event.stopPropagation();">
                        <span class="carousel-control-next-icon" aria-hidden="true"></span>
                        <span class="visually-hidden">Next</span>
                    </button>
                </div>
                <div class="col cartItemDetails">
                    <span>
                        <a asp-action="Details" asp-controller="Products" class="link-primary"
                           asp-route-id="@orderItem.ProductType.Product.Id">
                            @orderItem.ProductType.Product.Name
                        </a>
                    </span>
                    <br />
                    <span class="text-secondary">
                        @orderItem.ProductType.Color.Name / @orderItem.ProductType.Size
                    </span>
                    <br />
                    <span class="text-secondary">
                        @if (orderItem.ProductType.Product.DiscountPercentage == 0)
                        {
                            @priceBeforeDiscount
                        }
                        else
                        {
                            <span class="discount-txt">@priceBeforeDiscount</span>
                            @priceAfterDiscount
                        }
                        @currencySign
                    </span>
                    <div>
                        <select class="form-select" aria-label="Number Of Items" onchange="updateItemQuantity(@orderItem.Id)(arguments[0])">
                            @{
                                var minVal = Math.Min(10, orderItem.ProductType.Quantity);
                                @for (var i = 1; i <= minVal; i++)
                                {
                                    <option value="@i" selected="@(orderItem.Amount == i)">@i</option>
                                }
                            }
                        </select>
                        <button type="button" class="btn btn-outline-danger deleteButton" onClick="deleteItemFromCart(@orderItem.Id, arguments[0])">
                            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor"
                                 class="bi bi-trash-fill" viewBox="0 0 16 16">
                                <path d="M2.5 1a1 1 0 0 0-1 1v1a1 1 0 0 0 1 1H3v9a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2V4h.5a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1H10a1 1 0 0 0-1-1H7a1 1 0 0 0-1 1H2.5zm3 4a.5.5 0 0 1 .5.5v7a.5.5 0 0 1-1 0v-7a.5.5 0 0 1 .5-.5zM8 5a.5.5 0 0 1 .5.5v7a.5.5 0 0 1-1 0v-7A.5.5 0 0 1 8 5zm3 .5v7a.5.5 0 0 1-1 0v-7a.5.5 0 0 1 1 0z">
                                </path>
                            </svg>
                            <span class="d-none d-sm-inline d-md-inline d-lg-none">Delete From Cart</span>
                        </button>
                    </div>

                </div>
            </li>
            <li>
                <hr class="dropdown-divider @seperatorExtraClass">
            </li>
             }
            </div>

            @{
                string isShowing = "";
                if (OrderItems.Count > 0)
                {
                    isShowing = "";
                }
                else
                {
                    isShowing = "d-none";
                }
                <li>
                    <hr class="dropdown-divider">
                </li>
                <li>
                    <div class="container">
                        <div class="row @isShowing" id="bottom-btn">
                            <a class="btn btn-secondary col-5" href="/Orders/Cart" role="button">View Cart</a>
                            <button class="btn btn-primary col-5 ms-auto" id="checkout_partial" data-bs-toggle="modal" data-bs-target="#checkoutModal">Checkout</button>
                        </div>
                    </div>
                </li>
                }
        </ul>
    </li>
